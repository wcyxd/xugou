export default {
  // Common
  common: {
    loading: 'Loading...',
    error: 'An error occurred',
    success: 'Operation successful',
    retry: 'Retry',
    cancel: 'Cancel',
    confirm: 'Confirm',
    save: 'Save',
    delete: 'Delete',
    edit: 'Edit',
    create: 'Create',
    refresh: 'Refresh',
    back: 'Back',
    settings: 'Settings',
    search: 'Search',
    notFound: 'No results found',
    unknown: 'Unknown',
    goBack: 'Go Back',
    notSet: 'Not Set',
    unknownError: 'Unknown Error',
    ok: 'OK',
    saving: 'Saving...',
    copied: 'Copied',
    copy: 'Copy',
    time: {
      minutes: 'min',
      hours: 'hr',
      days: 'days',
      daysAgo: 'days ago',
      hoursAgo: 'hours ago',
      minutesAgo: 'minutes ago',
      secondsAgo: 'seconds ago',
    },
  },
  
  // Authentication
  auth: {
    login: 'Login',
    register: 'Register',
    logout: 'Logout',
    username: 'Username',
    password: 'Password',
    confirmPassword: 'Confirm Password',
    email: 'Email',
    forgotPassword: 'Forgot Password',
    loginSuccess: 'Login successful',
    registerSuccess: 'Registration successful',
    invalidCredentials: 'Invalid username or password',
    usernameRequired: 'Username is required',
    passwordRequired: 'Password is required',
    passwordsDoNotMatch: 'Passwords do not match',
    emailInvalid: 'Invalid email format',
    logoutTitle: 'Logout',
    logoutConfirmation: 'Are you sure you want to log out?',
    logoutDescription: 'Log out of your current account and return to the login screen',
  },
  
  // Navigation
  navigation: {
    home: 'Home',
    dashboard: 'Dashboard',
    monitors: 'Monitors',
    agents: 'Agents',
    status: 'Status Page',
    notifications: 'Notifications',
    settings: 'Settings',
    profile: 'Profile',
  },
  
  // Monitors
  monitors: {
    title: 'Monitor Management',
    addMonitor: 'Add Monitor',
    editMonitor: 'Edit Monitor',
    deleteMonitor: 'Delete Monitor',
    deleteConfirm: 'Are you sure you want to delete this monitor?',
    createSuccess: 'Monitor created successfully',
    updateSuccess: 'Monitor updated successfully',
    deleteSuccess: 'Monitor deleted successfully',
    detail: 'Monitor Details',
    name: 'Name',
    url: 'URL',
    method: 'Method',
    interval: 'Interval',
    timeout: 'Timeout',
    expectedStatus: 'Expected Status',
    headers: 'Headers',
    body: 'Body',
    statusText: 'Status',
    uptime: 'Uptime',
    response_time: 'Response Time',
    last_check: 'Last Check',
    lastChecked: 'Last Checked',
    active: 'Active',
    history: 'History',
    checks: 'Checks',
    check: 'Check Now',
    nameRequired: 'Name is required',
    urlRequired: 'URL is required',
    urlInvalid: 'Invalid URL format',
    intervalInvalid: 'Invalid interval',
    timeoutInvalid: 'Invalid timeout',
    seconds: 'seconds',
    minutes: 'minutes',
    status: {
      up: 'Up',
      down: 'Down',
      pending: 'Pending'
    },
    statusHistory: 'Status History',
    selectStatusCode: 'Select Status Code',
    enterName: 'Enter monitor name',
    enterUrl: 'Enter URL or host to monitor',
    headerName: 'Name',
    headerValue: 'Value',
    addHeader: 'Add Header',
    bodyPlaceholder: 'Enter request body content, e.g. JSON data',
    create: 'Create Monitor',
    createError: 'Creation Error',
    fieldsRequired: 'Please fill in all required fields',
    createFailed: 'Failed to create monitor',
    fetchDetailFailed: 'Failed to fetch monitor details',
    monitorNotFound: 'Monitor information not found',
    checkNowSuccess: 'Check successful',
    checkNowSuccessMessage: 'The check was initiated successfully, please refresh to see the result',
    checkNowFailed: 'Check failed',
    deleteFailed: 'Failed to delete monitor',
    deleteConfirmTitle: 'Confirm Delete',
    deleteConfirmMessage: 'Are you sure you want to delete this monitor? This action cannot be undone.',
    type: 'Type',
    created: 'Created',
    noMonitorsFound: 'No monitors found',
    createFirst: 'Create your first monitor',
    filters: {
      all: 'All',
    },
    statusDetails: {
      title: 'Current Status',
      up: 'Up',
      down: 'Down',
      pending: 'Pending',
      unknown: 'Unknown',
      lastCheck: 'Last Check',
      uptime: 'Uptime',
      responseTime: 'Response Time',
      active: 'Status',
      activeState: 'Active',
      pausedState: 'Paused',
    },
    charts: {
      statusHistory: 'Status History',
    },
    historyRecords: {
      title: 'History',
      empty: 'No history records',
      viewMore: 'View more history',
    },
    actions: {
      checkNow: 'Check now',
    },
    basicInfo: 'Basic Information',
    statusCodes: {
      ok: 'OK',
      created: 'Created',
      noContent: 'No Content',
      successful: 'Successful',
      movedPermanently: 'Moved Permanently',
      found: 'Found',
      redirection: 'Redirection',
      badRequest: 'Bad Request',
      unauthorized: 'Unauthorized',
      forbidden: 'Forbidden',
      notFound: 'Not Found',
      clientError: 'Client Error',
      serverError: 'Internal Server Error',
      badGateway: 'Bad Gateway',
      serviceUnavailable: 'Service Unavailable',
      gatewayTimeout: 'Gateway Timeout',
      serverErrors: 'Server Error'
    },
  },
  
  // Agents
  agents: {
    title: 'Application Server',
    addAgent: 'Add Agent',
    editAgent: 'Edit Agent',
    deleteAgent: 'Delete Agent',
    deleteConfirm: 'Are you sure you want to delete this agent?',
    createSuccess: 'Agent created successfully',
    updateSuccess: 'Agent updated successfully',
    deleteSuccess: 'Agent deleted successfully',
    detail: 'Agent Details',
    deleteTitle: 'Delete Agent',
    deleteConfirmation: 'Are you sure you want to delete this agent? This action cannot be undone.',
    deleteFailed: 'Failed to delete agent',
    fetchDetailFailed: 'Failed to fetch agent details',
    notFound: 'Agent not found',
    basicInfo: 'Basic Information',
    resources: 'Resource Usage',
    name: 'Name',
    status: 'Status',
    token: 'Token',
    generateToken: 'Generate Token',
    regenerateToken: 'Regenerate Token',
    copyToken: 'Copy Token',
    tokenCopied: 'Token copied',
    hostname: 'Hostname',
    ipAddress: 'IP Address',
    os: 'OS',
    version: 'Version',
    cpuUsage: 'CPU Usage',
    memoryUsage: 'Memory Usage',
    diskUsage: 'Disk Usage',
    networkRx: 'Network Receive',
    networkTx: 'Network Transmit',
    nameRequired: 'Name is required',
    status_active: 'Online',
    status_inactive: 'Offline',
    resourceUsage: 'Resource Usage',
    lastSeen: 'Last Seen',
    created: 'Installation Time',
    memory: 'Memory',
    disk: 'Disk',
    filters: {
      all: 'All',
    },
    noAgentsFound: 'No agents found',
    createFirst: 'Create your first agent',
    tokenError: 'Token Generation Error',
    tokenFailed: 'Failed to generate agent registration token',
    generatingToken: 'Generating registration token...',
    addNewAgent: 'Add New Agent',
    followGuide: 'Please follow these steps to install the agent',
    serverAddress: 'Server Address',
    registrationToken: 'Registration Token',
    installGuide: 'Installation Guide',
    selectPlatform: '1. Select Operating System',
    selectArch: '2. Select System Architecture',
    downloadInstaller: '3. Download Installation File',
    downloadWindows: 'Download Windows Installer',
    downloadRun: '3. Download and Install',
    runAgent: '4. Run the Agent',
    returnToList: 'Return to Agents List',
    generateNewToken: 'Generate New Token',
  },
  
  // Status Page
  status: {
    title: 'Status Page',
    config: 'Status Page Configuration',
    saveConfig: 'Save Configuration',
    configSuccess: 'Configuration saved successfully',
    pageTitle: 'Page Title',
    description: 'Description',
    logoUrl: 'Logo URL',
    customCss: 'Custom CSS',
    selectMonitors: 'Select Monitors',
    selectAgents: 'Select Agents',
    overview: 'System Overview',
    incidents: 'Recent Incidents',
    systemStatus: 'System Status',
    allSystemsUp: 'All Systems Operational',
    partialSystemsDown: 'Partial System Outage',
    allSystemsDown: 'Major System Outage',
    lastUpdated: 'Last Updated',
  },
  
  // Notifications
  notifications: {
    title: 'Notification Management',
    settings: 'Notification Settings',
    channels: 'Notification Channels',
    templates: 'Notification Templates',
    history: 'Notification History',
    addChannel: 'Add Channel',
    editChannel: 'Edit Channel',
    deleteChannel: 'Delete Channel',
    channelName: 'Channel Name',
    channelType: 'Channel Type',
    channelConfig: 'Channel Configuration',
    enabled: 'Enabled',
    globalSettings: 'Global Settings',
    monitorSettings: 'Monitor Settings',
    agentSettings: 'Agent Settings',
    onDown: 'Notify On Down',
    onRecovery: 'Notify On Recovery',
    onOffline: 'Notify On Offline',
    thresholdSettings: 'Threshold Settings',
    cpuThreshold: 'CPU Threshold',
    memoryThreshold: 'Memory Threshold',
    diskThreshold: 'Disk Threshold',
    saveSettings: 'Save Settings',
    settingsSaved: 'Settings saved',
    test: 'Test',
    testSuccess: 'Test notification sent successfully',
    testFailed: 'Test notification failed',
    noNotifications: 'No notifications',
    loadFailed: 'Failed to load notification settings',
    monitorAlertEnabled: 'Enable Monitor Alerts',
    agentAlertEnabled: 'Enable Agent Alerts',
    save: {
      success: 'Notification settings saved successfully',
      error: 'Failed to save notification settings'
    },
    globalSettingsConfig: {
      global: 'Global Settings',
      globalDescription: 'Configure system-level global notification settings that will be applied as defaults to all monitors and agents.',
      globalInfo: 'Configure global default notification settings on this page, including basic settings for monitor and agent alerts. You can configure notifications for specific monitors or agents on their respective settings pages.',
      enabled: 'Enable Notifications'
    },
    monitors: {
      description: 'Configure global default alert notification settings for all API monitors.',
      enabledDescription: 'When enabled, you will receive notifications for all monitors.',
      onDown: 'Notify On Down',
      onDownDescription: 'Send a notification when a monitor detects a failure.',
      onRecovery: 'Notify On Recovery',
      onRecoveryDescription: 'Send a notification when a monitor recovers from a failure.'
    },
    agents: {
      description: 'Configure global default alert notification settings for all agents.',
      enabledDescription: 'When enabled, you will receive notifications for all agents.',
      onOffline: 'Notify On Offline',
      onOfflineDescription: 'Send a notification when an agent goes offline.',
      onRecovery: 'Notify On Recovery',
      onRecoveryDescription: 'Send a notification when an agent recovers from offline status.',
      onCpuThreshold: 'CPU Threshold Alert',
      onCpuThresholdDescription: 'Send a notification when CPU usage exceeds the threshold.',
      cpuThreshold: 'CPU Threshold',
      cpuThresholdDescription: 'Enter a value between 1 and 100. An alert will be triggered when CPU usage exceeds this threshold.',
      onMemoryThreshold: 'Memory Threshold Alert',
      onMemoryThresholdDescription: 'Send a notification when memory usage exceeds the threshold.',
      memoryThreshold: 'Memory Threshold',
      memoryThresholdDescription: 'Enter a value between 1 and 100. An alert will be triggered when memory usage exceeds this threshold.',
      onDiskThreshold: 'Disk Threshold Alert',
      onDiskThresholdDescription: 'Send a notification when disk usage exceeds the threshold.',
      diskThreshold: 'Disk Threshold',
      diskThresholdDescription: 'Enter a value between 1 and 100. An alert will be triggered when disk usage exceeds this threshold.'
    },
    specificSettings: {
      title: 'Specific Monitor Notification Settings',
      description: 'Configure separate notification settings for each specific monitor.',
      channels: 'Notification Channels',
      noMonitors: 'No monitors available',
      noAgents: 'No agents available'
    },
    events: {
      onDown: 'Notify On Monitor Down',
      onRecovery: 'Notify On Recovery',
      onOffline: 'Notify On Agent Offline',
      onCpuThreshold: 'CPU Usage Alert',
      onMemoryThreshold: 'Memory Usage Alert',
      onDiskThreshold: 'Disk Usage Alert'
    },
    threshold: {
      label: 'Threshold',
      percent: '%'
    },
    channelSettings: {
      title: 'Notification Channels',
      description: 'Configure different notification channels to receive alerts from monitors and systems.',
      add: 'Add Channel',
      edit: 'Edit Channel',
      loadFailed: 'Failed to load notification channels',
      noChannels: 'No notification channels available',
      addPrompt: 'Click the button above to add a channel',
      nameRequired: 'Channel name is required',
      emailRequired: 'Email address is required',
      webhookUrlRequired: 'Webhook URL is required',
      tokenAndChatIdRequired: 'Token and Chat ID are required',
      addSuccess: 'Channel added successfully',
      addFailed: 'Failed to add channel',
      updateSuccess: 'Channel updated successfully',
      updateFailed: 'Failed to update channel',
      saveFailed: 'Failed to save channel',
      deleteConfirm: 'Delete Channel',
      deleteConfirmMessage: 'Are you sure you want to delete this notification channel?',
      deleteSuccess: 'Channel deleted successfully',
      deleteFailed: 'Failed to delete channel',
      name: 'Channel Name',
      email: 'Email Address',
      webhookUrl: 'Webhook URL',
      token: 'Token',
      chatId: 'Chat ID',
      enabled: 'Enabled Status',
      namePlaceholder: 'Enter channel name',
      channelType: 'Channel Type',
      typeOptions: {
        app: 'In-App',
        email: 'Email',
        wechat: 'WeChat'
      }
    },
    specificMonitorNotifications: 'Monitor Notification Settings',
    specificAgentNotifications: 'Agent Notification Settings',
    overrideGlobalSettings: 'Override Global Settings',
    specificNotificationEnabled: 'Enable Specific Notifications',
    enableResponseTimeAlert: 'Enable Response Time Alert',
    responseTimeThreshold: 'Response Time Threshold',
    responseTimeThresholdDescription: 'An alert will be triggered when response time exceeds this threshold (milliseconds)',
    consecutiveFailures: 'Consecutive Failures',
    consecutiveFailuresDescription: 'An alert will be triggered when consecutive failures reach the threshold',
    consecutiveFailuresThreshold: 'Consecutive Failures Threshold',
    ms: 'ms',
    times: 'times',
  },
  
  // Settings
  settings: {
    title: 'Application Settings',
    language: 'Language',
    theme: 'Theme',
    account: 'Account',
    notifications: 'Notifications',
    about: 'About',
    changePassword: 'Change Password',
    currentPassword: 'Current Password',
    newPassword: 'New Password',
    confirmNewPassword: 'Confirm New Password',
    passwordChanged: 'Password changed successfully',
    chineseLanguage: 'Chinese',
    englishLanguage: 'English',
    lightTheme: 'Light Theme',
    darkTheme: 'Dark Theme',
    systemTheme: 'System Theme',
    appearance: 'Appearance',
    saveFailed: 'Failed to save settings',
    languageChangeFailed: 'Failed to change language',
    selectLanguage: 'Select Language',
    selectTheme: 'Select Theme',
    themeLight: 'Light',
    themeDark: 'Dark',
    themeSystem: 'System',
    profile: 'Profile',
    version: 'Version',
    globalSettings: 'Global Settings',
    notificationChannels: 'Notification Channels',
    notificationsMonitor: 'Monitor Notifications',
    notificationsAgent: 'Agent Notifications',
    apiSettings: 'API Settings',
    apiBaseUrl: 'API Base URL',
    apiHelperText: 'Please enter the XUGOU backend API server address',
    apiUrlSaved: 'API address saved. Please restart the app for changes to take effect.',
    apiUrlSaveFailed: 'Failed to save API address',
  },
  
  // Dashboard
  dashboard: {
    title: 'Database Server',
    summary: 'Summary',
    totalMonitors: 'Total Monitors',
    activeMonitors: 'Active Monitors',
    downMonitors: 'Down Monitors',
    totalAgents: 'Total Agents',
    onlineAgents: 'Online Agents',
    offlineAgents: 'Offline Agents',
    uptime: 'Uptime',
    responseTime: 'Avg Response Time',
    recentIncidents: 'Recent Incidents',
    noIncidents: 'No incidents',
    quickActions: 'Quick Actions',
    addMonitor: 'Add Monitor',
    addAgent: 'Add Agent',
    checkAll: 'Check All',
    viewStatus: 'View Status Page',
  },
  
  // Setup
  setup: {
    welcome: 'Welcome to XUGOU Monitor',
    firstTimeSetup: 'First-time Setup',
    continue: 'Continue',
  },

  // Profile
  profile: {
    loadFailed: 'Failed to load user profile',
    emailRequired: 'Email is required',
    invalidEmail: 'Please enter a valid email',
    emailUpdateSuccess: 'Email updated successfully',
    emailUpdateFailed: 'Failed to update email',
    currentPasswordRequired: 'Current password is required',
    newPasswordRequired: 'New password is required',
    passwordMismatch: 'Passwords do not match',
    passwordResetSuccess: 'Password reset successfully',
    passwordResetFailed: 'Failed to reset password',
    accountSettings: 'Account Settings',
    changeEmail: 'Change Email',
    updateEmail: 'Update Email',
    newEmail: 'New Email',
    resetPassword: 'Reset Password',
    currentPassword: 'Current Password',
    newPassword: 'New Password',
    confirmPassword: 'Confirm Password'
  }
}; 